using EmployeeManagement.Data;
using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.OpenApi.Models;

var builder = WebApplication.CreateBuilder(args);

builder.Services.AddControllersWithViews();
builder.Services.AddSingleton<MongoDbContext>();

// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Swagger API
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new OpenApiInfo
    {
        Title = "Employee Management API",
        Version = "v1",
        Description = "An API for managing employees in a MongoDB database."
    });
});

var app = builder.Build();

// ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Swagger UI ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
if (app.Environment.IsDevelopment() || app.Environment.IsProduction())
{
    app.UseSwagger();
    app.UseSwaggerUI(c =>
    {
        c.SwaggerEndpoint("/swagger/v1/swagger.json", "Employee Management API V1");
        c.RoutePrefix = "swagger";  // Swagger UI ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏µ‡πà `/swagger`
    });
}

// ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö Middleware ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
app.UseStaticFiles(); // üìå ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô Routing
app.UseRouting();
app.UseAuthorization();
// ‚úÖ API Routing (EmployeeApiController)
app.MapControllers();  

// ‚úÖ MVC Routing (EmployeeController)
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Employee}/{action=Index}/{id?}");

app.Run();